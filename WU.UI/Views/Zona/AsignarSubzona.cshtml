@model WU.UI.Controllers.ZonaController
@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "Asignar Subzona";
}
<script type="text/javascript">
    $(function () {
        $('#finicio').datetimepicker({ format: 'DD/MM/YYYY' });
        $('#ffin').datetimepicker({ format: 'DD/MM/YYYY' });
    });

</script>
<style type="text/css">
    #map {
        width: 100%;
        height: 500px;
    }
</style>
<h3>WU_CUS001 Asignar Subzona a ET</h3>

<div class="row">
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Datos</h3>
            </div>
            <div class="panel-body">
                <div class="row" style="margin-bottom: 15px;">
                    <label for="ddlZonas" class="col-sm-3 col-form-label">Zonas:</label>
                    <div class="col-sm-5">
                        @{
                            var modeloZ = Model.zonaBL.CargarZonas();
                            <select id="ddlZona" name="ddlZona" class="form-control">
                                @for (int i = 0; i < modeloZ.Count(); i++)
                                {
                                    string Cid = modeloZ.ElementAt(i).codzona;
                                    string nom = modeloZ.ElementAt(i).dsczona;
                                    <option id="@Cid" value="@Cid">@nom</option>
                                }
                            </select>
                        }
                    </div>
                </div>

                <div class="form-group row">
                    <div class="col-sm-3 col-xs-6">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("cbMoneyTransfer", false)Money Transfer
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-3 col-xs-6">
                        <div class="checkbox">
                            <label>
                                @Html.CheckBox("cbPagoServicios", false)Pago de servicios
                            </label>
                        </div>
                    </div>
                    <div class="col-sm-2  col-xs-12">
                        <button id="btnBuscar" name="btnBuscar" class="btn btn-block btn-success" onclick="buscarZona();">Buscar</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Mapa</h3>
            </div>
            <div class="panel-body" style="padding: 0">
                <!---------------------------MAPA-------------------------->
                <div id="map"></div>
            </div>
        </div>
    </div>
    <div class="col-md-4">
        <div class="panel panel-default row">
            <div class="panel-heading">
                <h3 class="panel-title">Subzonas</h3>
            </div>
            <div class="panel-body esp-m">
                <div class="form-group">
                    <div class="row" style="margin-bottom: 15px;">
                        <label for="ddlZonas" class="col-sm-3 col-form-label">Asignadas:</label>
                        <div class="col-sm-9">
                            <select id="ddlSubzona" name="ddlSubzona" class="form-control">
                                <option>-VACÍO-</option>
                            </select>
                        </div>
                    </div>
                    <div class="row" style="margin-top: 15px;">
                        <label for="ddlZonas" class="col-sm-3 col-form-label">Nueva:</label>
                        <div class="col-sm-9">
                            <input type="text" id="txtSubzona" name="txtSubzona" class="form-control ocl-8" placeholder="Nombre de subzona">
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-default row">
            <div class="panel-heading">
                <h3 class="panel-title">ET</h3>
            </div>
            <div class="panel-body esp-m">
                <div class="form-group">
                    <div class="row ">
                        <div class="col-sm-12" style="margin-bottom: 15px; width:100%">
                            @{
                                var modeloET = Model.etBL.ListarET();
                                int cantET = modeloET.Count();
                                <select name="ddlET" id="ddlET" class="form-control">
                                    @for (int i = 0; i < cantET; i++)
                                    {
                                        int Cid = modeloET.ElementAt(i).codet;
                                        string nom = modeloET.ElementAt(i).nomet + " " +
                                                    modeloET.ElementAt(i).apeet;
                                        <option id="@Cid" value="@Cid">@nom</option>
                                    }
                                </select>
                            }
                        </div>
                    </div>
                </div>

                <div class="form-group row">
                    <label for="finicio" class="col-sm-4 col-form-label">Fecha inicio:</label>
                    <div class="col-sm-8">
                        <div class="input-group date" id="finicio">
                            <input type="text" id="txtFchIni" name="txtFchIni" class="form-control ocl-8" value="@DateTime.Now.AddDays(1 - DateTime.Now.Day).ToString("dd/MM/yyyy")">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group row">
                    <label for="ffin" class="col-sm-4 col-form-label">Fecha fin:</label>
                    <div class="col-sm-8">
                        <div class="input-group date" id="ffin">
                            <input type="text" id="txtFchFin" name="txtFchFin" class="form-control ocl-8" value="@DateTime.Now.AddMonths(1).AddDays(1 - DateTime.Now.Day).ToString("dd/MM/yyyy")">
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <button id="btnAsignar" name="btnAsignar" class="btn btn-block btn-primary" onclick="ActualizarETAsignado();">Asignar ET</button>
            </div>
            <textarea id="txtCoord" name="txtCoord" class="form-control col-md-12" rows="3" cols="5" style="display:nonex"></textarea>


        </div>
    </div>
</div>




<script type="text/javascript">
    var source = new ol.source.Vector();
    var puntoLima = ol.proj.fromLonLat([-77.044, -12.062]);

    var map = new ol.Map({
        target: 'map',
        layers: [
        new ol.layer.Tile({
            source: new ol.source.OSM()
            /*source: new ol.source.XYZ({
            attributions: [
              new ol.Attribution({  html: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community' })],
            url: 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}'
            })*/

        }),
        new ol.layer.Vector({
            source: source
        })],
        view: new ol.View({
            center: puntoLima,
            zoom: 15,
            projection: 'EPSG:3857'
        })
    });

    function cargarMapa(mapa, array) {
        if (array.length > 0) {

            var polygon = new ol.geom.Polygon([array]);
            var feature = new ol.Feature(polygon.transform('EPSG:4326', 'EPSG:3857'));
            var vectorSource = new ol.source.Vector();
            vectorSource.addFeature(feature);
            var vectorLayer = new ol.layer.Vector({
                source: vectorSource
            });
            mapa.addLayer(vectorLayer);
            //console.log("Se dibujó el area: " + array);
        }
    }

    function centrarMapa(mapa, array, zoom) {
        var lat = [];
        var lon = [];
        for (var i = 0 ; i < array.length; i++) {
            if (!isNaN(array[i][0])) lat.push(array[i][0]);
            if (!isNaN(array[i][1])) lon.push(array[i][1]);
        }
        var avglat = lat.reduce((a, b) => a + b, 0) / lat.length;
        var avglon = lon.reduce((a, b) => a + b, 0) / lon.length;

        var pan = ol.animation.pan({
            source: mapa.getView().getCenter()
        });
        mapa.getView().setZoom(zoom);
        mapa.beforeRender(pan);
        mapa.getView().setCenter(ol.proj.transform([avglat, avglon], 'EPSG:4326', 'EPSG:3857'));
    }

    function pintarMarcadores(mapa, array) {

        var iconFeatures = [];
        array.forEach(function (marcador) {

            var iconFeature = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.transform([marcador.lon, marcador.lat], 'EPSG:4326',
                'EPSG:3857')),
                name: marcador.nomlocal,
                population: marcador.calificacion,
                rainfall: marcador.calificacion
            });
            iconFeatures.push(iconFeature);

        });

        var vectorSource = new ol.source.Vector({
            features: iconFeatures //add an array of features
        });

        var iconStyle = new ol.style.Style({
            image: new ol.style.Icon(({
                anchor: [0.5, 46],
                anchorXUnits: 'fraction',
                anchorYUnits: 'pixels',
                opacity: 1,
                //src: 'https://openlayers.org/en/v3.20.1/examples/data/icon.png'
                color: '#8959A8',
                src: 'https://openlayers.org/en/v3.20.1/examples/data/dot.png'
            }))
        });

        var markerLayer = new ol.layer.Vector({
            source: vectorSource,
            style: iconStyle
        });

        mapa.addLayer(markerLayer);
    }

    function mapaCalor(mapa, array) {

        var dat = new ol.source.Vector();
        // created for owl range of data

        array.forEach(function (marcador) {
            dat = new ol.source.Vector();
            var pointFeature = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.transform([marcador.lon, marcador.lat], 'EPSG:4326', 'EPSG:3857')),
                weight: 5// e.g. temperature
            });
            dat.addFeature(pointFeature);

            heatMapLayer = new ol.layer.Heatmap({
                source: dat,
                radius: 40
               , blur: 60 - (marcador.calificacion * 10)
            });
            mapa.addLayer(heatMapLayer);
        });
    }

    function limpiarMapa(mapa) {
        var layerArray, len, layer;
        layerArray = map.getLayers().getArray();
        len = layerArray.length;
        while (len > 2) { //************
            layer = layerArray[len - 1];
            mapa.removeLayer(layer);
            len = layerArray.length;
        }
    }

    function crearZonas(mapa) {
        var draw = new ol.interaction.Draw({
            type: 'Polygon',
            source: source,
            style: new ol.style.Style({
                image:
                //Start of the star style
                new ol.style.RegularShape({
                    fill: new ol.style.Fill({
                        color: 'red'
                    }),
                    points: 4,
                    radius1: 15,
                    radius2: 1,
                }),
                stroke: new ol.style.Stroke({
                    color: 'blue',
                    width: 3
                })
            })
        });
        mapa.addInteraction(draw);


        //Agregar las coordenadas creadas en un campo
        source.on('addfeature', function (evt) {
            var feature = evt.feature;
            var coords = feature.getGeometry().getCoordinates();
            var coo = "";
            coords[0].forEach(function (element) {
                element = ol.proj.transform(element, 'EPSG:3857', 'EPSG:4326');  //14 decimales , 18 caracteres
                coo += element + ";";
            });
            document.getElementById("txtCoord").value = coo;
        });
    }


    function buscarZona() {
        $.ajax({
            url: '/Zona/BuscarZona',
            type: "POST",
            dataType: "JSON",
            data: {
                ddlZona: document.getElementById("ddlZona").value,
                cbMoneyTransfer: document.getElementById("cbMoneyTransfer").checked,
                cbPagoServicios: document.getElementById("cbPagoServicios").checked
            },
            success: function (result) {
                limpiarMapa(map);
                //Habilitar la creación de subzonas
                crearZonas(map);
                //Zonas
                var arrayZona = [];
                result.lstZonas.forEach(function (dato) {
                    arrayZona.push([dato.lat, dato.lon]);
                });
                cargarMapa(map, arrayZona);
                centrarMapa(map, arrayZona, 14);

                //Subzonas
                var arrSubzona = [];
                result.lstSubzonas.forEach(function (subzona) {
                    subzona.forEach(function (dato) {
                        arrSubzona.push([dato.lat, dato.lon]);
                    });
                    cargarMapa(map, arrSubzona);
                    arrSubzona = [];
                });
                $('#ddlSubzona').empty();
                result.lstSubzonaDDL.forEach(function (subzona) {
                    //cargar ddl
                    $('#ddlSubzona').append('<option value="' + subzona.codsubzona + '">' + subzona.dscsubzona + '</option>');
                });
                //Locales (marcadores)
                mapaCalor(map, result.lstLocales);
                //pintarMarcadores(map, result.lstLocales);c

                $('#ddlSubzona').change(function () {
                    var codzona = $("#ddlSubzona").val();
                    var seleccionada = [];
                    var x;
                    var y;
                    result.lstSubzonas.forEach(function (subzona) {
                        x = subzona;
                        subzona.forEach(function (dato) {
                            y = dato.codsubzona;
                            if (dato.codsubzona == codzona) {
                                seleccionada.push([dato.lat, dato.lon]);
                            }
                        });
                    });
                    if (seleccionada.length > 0) {
                        centrarMapa(map, seleccionada, 16);
                    }


                    //ET asignado
                    $.ajax({
                        url: '/Zona/ETAsignado',
                        type: "POST",
                        dataType: "JSON",
                        data: {
                            codsubzona: document.getElementById("ddlSubzona").value
                        },
                        success: function (result) {
                            $('#ddlET').val(result.codet);
                            result.fchinicio = result.fchinicio == null ? "" : result.fchinicio;
                            result.fchfin = result.fchfin == null ? "" : result.fchfin;
                            $('#txtFchIni').val(result.fchinicio == "" ? "@DateTime.Now.AddDays(1 - DateTime.Now.Day).ToString("dd/MM/yyyy")" : result.fchinicio);
                            $('#txtFchFin').val(result.fchfin == "" ? "@DateTime.Now.AddMonths(1).AddDays(1 - DateTime.Now.Day).ToString("dd/MM/yyyy")" : result.fchfin);
                        },
                        complete: function (result) {
                        }
                    });
                });
            },
            complete: function (result) {
            }
        });

    }


    function ActualizarETAsignado() {

        var codz = document.getElementById("ddlZona").value;
        var codsz = document.getElementById("ddlSubzona").value;
        var dscsz = document.getElementById("txtSubzona").value;
        var codet = document.getElementById("ddlET").value;
        var fini = document.getElementById("txtFchIni").value;
        var ffin = document.getElementById("txtFchFin").value;
        $.ajax({
            url: '/Zona/ActualizarETAsignado',
            type: "POST",
            dataType: "JSON",
            data: {
                codzona: codz,
                codsubzona: codsz,
                dscsubzona: dscsz,
                codet: codet,
                fecini: fini,
                fecfin: ffin
            },
            success: function (result) {
                if (result != "OK") {
                    alert(result);
                } else {
                    alert("Se asignó el et " + codet + " a la subzona " + codsz);
                }
            },
            complete: function (result) {
            }
        });
    }




</script>
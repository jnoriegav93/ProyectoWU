@model WU.UI.Controllers.ZonaController
@{
    Layout = "../Shared/_Layout.cshtml";
    ViewBag.Title = "Detalle de zona";
}
<!DOCTYPE html>
<style type="text/css">
    #map {
        width: 100%;
        height: 500px;
    }
</style>

@{

    string url = HttpContext.Current.Request.Url.AbsoluteUri;
    int longi = url.Length;
    //string cod = url.Substring(longi - 1, 1);
    string cod = url.Contains("=") ? url.Split('=')[1] : "0";
    var modelo = Model.zonaBL.CargarDetalleZona(cod);
}


<script type="text/javascript">
    $(document).ready(function () {
        $("#ddlEstzona option[value='@modelo.estzona']").prop('selected', true);

        $('#ddlDepartamento').change(function () {
            $("#txtCodubigeo").val("");
            var selectedValue = $(this).val();
            if (selectedValue != null && selectedValue != '') {
                $.getJSON('@Url.Action("/listarProvincias")', { ddlDepartamento: selectedValue },
                    function (jsondata) {
                    var dllSecond = $('#ddlProvincia');
                    dllSecond.empty();
                    $.each(jsondata, function (index, data) {
                        dllSecond.append($('<option/>', {
                            value: data.codubigeo,
                            text: data.provincia
                        }));
                    });
                });
            }
        });

        $('#ddlProvincia').change(function () {
            $("#txtCodubigeo").val("");
            var selectedDep = $("#ddlDepartamento").val();
            var selectedPro = $("#ddlProvincia").val();
            if (selectedPro != null && selectedPro != '') {
                $.getJSON('@Url.Action("/listarDistritos")', { ddlDepartamento: selectedDep, ddlProvincia: selectedPro },
                    function (jsondata) {
                        var dllSecond = $('#ddlDistrito');
                        dllSecond.empty();
                        $.each(jsondata, function (index, data) {
                            dllSecond.append($('<option/>', {
                                value: data.codubigeo,
                                text: data.distrito
                            }));
                        });
                    });
            }
        });




        /*$("#ddlDepartamento").val("15");
        $("#ddlDepartamento").change();
        $("#ddlProvincia").val("01");
        $("#ddlProvincia").change();
        $('#ddlDistrito').val("36");
        $('#ddlDistrito').change();*/


    });



    $('#ddlDistrito').change(function () {
        $("#txtCodubigeo").val($("#ddlDepartamento").val() + $("#ddlProvincia").val() + $("#ddlDistrito").val());
    });


</script>

@using (Html.BeginForm("ActualizarZona", "Zona", FormMethod.Post, new { enctype = "multipart/form-data" }))
{

    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Detalle</h3>
            </div>
            <div class="panel-body esp-s" style="">
                <div class="row">
                    <div class="col-md-3 col-sm-2">
                        <div class="form-group row">
                            <label for="" class="col-md-6 esp-s">Código:</label>
                            <div class="col-md-6">
                                <input type="text" id="txtCodzona" name="txtCodzona" class="form-control" value="@modelo.codzona">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8 col-sm-10">
                        <div class="form-group row">
                            <label for="" class="col-md-2 col-sm-6esp-s">Nombre:</label>
                            <div class="col-md-10">
                                <input type="text" id="txtDsczona" name="txtDsczona" class="form-control col-sm-6" value="@modelo.dsczona">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-2">
                        <div class="form-group row">
                            <label for="" class="col-md-6 coc-form-label esp-s">Cod. Ubigeo:</label>
                            <div class="col-md-6">
                                <input type="text" id="txtCodubigeo" name="txtCodubigeo" class="form-control ocl-8" value="@modelo.codubigeo">
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8 col-sm-10">
                        <div class="form-group row">
                            <label for="" class="col-md-2 esp-s">Ubigeo:</label>
                            <div class="col-md-10">
                                <input type="text" class="form-control" value="@modelo.dscubigeo">


                                        <!--<div class="col-md-10 esp-s">
                                            <div class="input-group col-md-12 col-xs-12" style="padding:0;">
                                                @{
                                                    var modeloDep = Model.ubigeoBL.listarDepartamentos();
                                                    int cantDep = modeloDep.Count();
                                                }
                                                <select class="form-control" id="ddlDepartamento" name="ddlDepartamento" style="width: 34%">
                                                    @for (int i = 0; i < cantDep; i++)
                                                    {
                                                        string Cid = modeloDep.ElementAt(i).codubigeo;
                                                        string nom = modeloDep.ElementAt(i).departamento;
                                                        <option id="@Cid" value="@Cid" label="@nom"></option>
                                                    }
                                                </select>
                                                <select class="form-control" id="ddlProvincia" name="ddlProvincia" style="width: 33%">
                                                    <option id="00" value="00">-PROVINCIA-</option>
                                                </select>
                                                <select class="form-control" id="ddlDistrito" name="ddlDistrito" style="width: 33%">
                                                    <option id="00" value="00">-DISTRITO-</option>
                                                </select>
                                            </div>
                                        </div>-->

                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3 col-sm-2">
                        <div class="form-group row">
                            <label for="" class="col-md-6 col-sm-6 esp-s">Estado:</label>
                            <div class="col-md-6">
                                <select id="ddlEstzona" name="ddlEstzona" class="form-control">
                                    <option id="1" value="0">ACTIVO</option>
                                    <option id="X" value="X">INACTIVO</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4 col-sm-3">
                        <div class="form-group row">
                            <label for="finicio" class="col-md-4 esp-s">Fecha:</label>
                            <div class="col-md-8">
                                <input type="text" class="form-control" value="@modelo.fchregistro.ToString("dd/MM/yyyy hh:mm tt")">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row" style="display:none">
                    <textarea id="txtCoord" name="txtCoord" class="form-control col-md-12" rows="3" cols="5"></textarea>
                </div>
            </div>
        </div>
        <!-- fin panel -->
    </div>
    <div class="row">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title">Mapa</h3>
            </div>
            <div class="panel-body" style="padding: 0">
                <div id="map"></div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-3" style="margin-bottom: 15px;">
            <a href="@Url.Action("NuevaZona", "Zona")" class="btn btn-sm btn-primary btn-block">
                <span class="glyphicon glyphicon-plus"></span>
                Nueva zona
            </a>
        </div>
        <div class="col-xs-3" style="margin-bottom: 15px;">
            <a href="#" class="btn btn-sm btn-primary btn-block">
                <span class="glyphicon glyphicon-pencil"></span>
                Editar Zona
            </a>
        </div>
        <div class="col-xs-3" style="margin-bottom: 15px;">
            <a href="@Url.Action("MantenimientoZonas", "Zona")" class="btn btn-sm btn-primary btn-block">
                <span class="glyphicon glyphicon-log-out"></span>
                Salir
            </a>
        </div>
        <div class="col-xs-3" style="margin-bottom: 15px;">
            <button type="submit" value="Actualizar" id="btnActualizar" name="btnActualizar" class="btn btn-sm btn-primary btn-block">
                <span class="glyphicon glyphicon-save"></span>Actualizar
            </button>
        </div>
    </div>
}

<script type="text/javascript">
    var source = new ol.source.Vector();
    var puntoLima = ol.proj.fromLonLat([-77.044, -12.062]);

    var map = new ol.Map({
        target: 'map',
        layers: [
        new ol.layer.Tile({
            source: new ol.source.OSM()
        }),
        new ol.layer.Vector({
            source: source
        })],
        view: new ol.View({
            center: puntoLima,
            zoom: 14,
            projection: 'EPSG:3857'
        })
    });

    //Funcionalidad de registro

    /*
    var draw = new ol.interaction.Draw({
        type: 'Polygon',
        source: source,
        style: new ol.style.Style({
            image:
            //Start of the star style
            new ol.style.RegularShape({
                fill: new ol.style.Fill({
                    color: 'red'
                }),
                points: 4,
                radius1: 15,
                radius2: 1,
            }),
            stroke: new ol.style.Stroke({
                color: 'blue',
                width: 2
            })
        })
    });
    map.addInteraction(draw);


    source.on('addfeature', function (evt) {
        var feature = evt.feature;
        var coords = feature.getGeometry().getCoordinates();
        var coo = "";
        coords[0].forEach(function (element) {
            element = ol.proj.transform(element, 'EPSG:3857', 'EPSG:4326');  //14 decimales , 18 caracteres
            coo += element + ";";
        });
        document.getElementById("txtCoord").value = coo;
    });

    */

    var myArray = [];

    @foreach (var d in Model.zonaBL.DibujarZona(cod))
    {
        @:myArray.push([@d.lat,@d.lon]);
                        }
    //alert(myArray);
    if (myArray.length > 0) {
        var polygony = new ol.geom.Polygon([myArray]);
        var featurey = new ol.Feature(polygony.transform('EPSG:4326', 'EPSG:3857'));
        var vectorSourcey = new ol.source.Vector();
        vectorSourcey.addFeature(featurey);
        var vectorLayery = new ol.layer.Vector({
            source: vectorSourcey
        });
        map.addLayer(vectorLayery);

        //
        var promlat = 0;
        var minlat = 0;
        var maxlat = 0;
        var promlon = 0;
        var minlon = 0;
        var maxlon = 0;

        myArray.forEach(function (coord) {
            promlat += coord[0];
            minlat = minlat > coord[1] ? coord[1] : minlat + 0;
            maxlat = maxlat < coord[1] ? coord[1] : maxlat + 0;

            promlon += coord[1];
            minlon = minlon > coord[0] ? coord[0] : minlon + 0;
            maxlon = maxlon < coord[0] ? coord[0] : maxlon + 0;
        });
        promlat = promlat / myArray.length;
        promlon = promlon / myArray.length;


        var puntocentro = ol.proj.fromLonLat([promlat, promlon]);
        map.getView().setCenter(puntocentro, 'EPSG:3857', 'EPSG:4326');


        //



        var lonlatarray = myArray;

        var markers = [];
        var i;
        for (i = 0; i < lonlatarray.length; i++) {

            markers.push(new ol.Feature({
                geometry: new ol.geom.Point(
                  ol.proj.fromLonLat(lonlatarray[i])
              //  ol.proj.fromLonLat([16.332253, 48.503684])
                  )
            }));

        }



        /*
       //MOSTRAR MARCADORES DEL POLÍGONO
       var lonlatarray = myArray;

       var markers = [];
       var i;
       for (i = 0; i < lonlatarray.length; i++) {

           markers.push(new ol.Feature({
               geometry: new ol.geom.Point(
                 ol.proj.fromLonLat(lonlatarray[i])
             //  ol.proj.fromLonLat([16.332253, 48.503684])
                 )
           }));

       }

       var vectorSource = new ol.source.Vector({
           features: markers
       });
       var markerVectorLayer = new ol.layer.Vector({
           source: vectorSource
       });
       map.addLayer(markerVectorLayer);
       */




        /*

        map.on('singleclick', function (e) {
            var iconFeature = new ol.Feature({
                geometry: new ol.geom.Point(e.coordinate),
            });
            iconFeature.setStyle(_self.iconStyle);
            _self.rasterVectorSource.addFeatures([iconFeature]);

            var modify = new ol.interaction.Modify({
                features: new ol.Collection([iconFeature])
            });
            iconFeature.on('change', function () {
                console.log('Feature Moved To:' + this.getGeometry().getCoordinates());
            }, iconFeature);
            this.mapRaster.addInteraction(modify);

        });
        */
        //


        // Create a select interaction and add it to the map:
        selectInteraction = new ol.interaction.Select();
        map.addInteraction(selectInteraction);

        modifyInteraction = new ol.interaction.Modify({ features: selectInteraction.getFeatures() });
        console.log("Inicio");

        modifyInteraction.on('modifystart', function (evt) {
            console.log("Start");
        });
        // set listener on "modifyend":
        modifyInteraction.on('change', function (evt) {
            console.log("Modificado");
            // get features:
            var collection = evt.features;
            // There's only one feature, so get the first and only one:
            var featureClone = collection.item(0).clone();
            // transform cloned feature to WGS84:
            featureClone.getGeometry().transform('EPSG:3857', 'EPSG:4326');
            // get GeoJSON of feature:
            var geojson = formatGeoJSON.writeFeature(featureClone);
            // save or do whatever...       
            console.log(geojson);
        });

          
        map.addInteraction(modifyInteraction);


    }

</script>